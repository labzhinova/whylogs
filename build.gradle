plugins {
    id 'java'
    id "com.diffplug.gradle.spotless" version "3.28.1"
}

group 'org.whylabs'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

spotless {
    java {
        googleJavaFormat()
    }
}

dependencies {
    implementation "org.apache.datasketches:datasketches-java:1.2.0-incubating"
    implementation "com.google.code.gson:gson:2.8.6"
    implementation "org.apache.commons:commons-csv:1.8"
    implementation "com.amazonaws:aws-java-sdk-s3:1.11.758"
    // https://mvnrepository.com/artifact/com.esotericsoftware/kryo
    implementation group: 'com.esotericsoftware', name: 'kryo', version: '5.0.0-RC5'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompileOnly 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'

    testCompile 'org.testng:testng:6.8'
}

test { //this is the gradle task to be executed
    useTestNG()

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // Fail the 'test' task on the first test failure
    failFast = true

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message)
    }
}